{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdello"
		},
		"SalesforceServiceCloud1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SalesforceServiceCloud1'"
		},
		"SalesforceServiceCloud1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'SalesforceServiceCloud1'"
		},
		"SalesforceServiceCloud2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SalesforceServiceCloud2'"
		},
		"SalesforceServiceCloud2_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'SalesforceServiceCloud2'"
		},
		"ls_af_datavalidation_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'ls_af_datavalidation'"
		},
		"ls_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_storage'"
		},
		"ls_synapsehub_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_synapsehub'"
		},
		"mysqlcon_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'mysqlcon'"
		},
		"sqlDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlDB'"
		},
		"SalesforceServiceCloud1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://tau-ac--pardot.my.salesforce.com/"
		},
		"SalesforceServiceCloud1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "bi@tau.ac.il.snd"
		},
		"SalesforceServiceCloud2_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://tau-ac--pardot.my.salesforce.com/"
		},
		"SalesforceServiceCloud2_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "bi@tau.ac.il.snd"
		},
		"adls_dl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2del.dfs.core.windows.net"
		},
		"akv_global_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://rituvault.vault.azure.net/"
		},
		"ls_af_datavalidation_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://datavalidationfa.azurewebsites.net"
		},
		"storageblob_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "blobsas"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_entity_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Entity Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "src_csv",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@concat(toLower(pipeline().parameters.EntityName),'.csv')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Validate Metadata",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Get Entity Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "dataValidationApi",
							"method": "POST",
							"headers": {
								"EntityName": {
									"value": "@if(startswith(activity('Get Entity Metadata').output.itemName,'salesterritory'),'Sales Territory',if(startswith(activity('Get Entity Metadata').output.itemName,'customers'),'Customer','Order'))",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@replace(concat('[',join(activity('Get Entity Metadata').output.structure,','),']'),'\\','')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_af_datavalidation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check Validation Error",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Validate Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Validate Metadata').output.Status , 'Error')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy to Stage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "src_csv",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@concat(toLower(pipeline().parameters.EntityName),'.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dst_parquet",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@concat(toLower(pipeline().parameters.EntityName),'.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Log Error",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set Error variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/hub/logError",
										"baseParameters": {
											"ErrorMessage": {
												"value": "@variables('loadError')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_etl",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Error variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "loadError",
										"value": {
											"value": "@concat('{\"Entity\" :\"Sales.',pipeline().parameters.EntityName,'\",', '\"ErrorMessage\": \"',activity('Validate Metadata').output.Message,'\"}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"EntityName": {
						"type": "string",
						"defaultValue": "salesterritory"
					}
				},
				"variables": {
					"EntityMetadata": {
						"type": "String"
					},
					"loadError": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HUB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_af_datavalidation')]",
				"[concat(variables('factoryId'), '/datasets/dst_parquet')]",
				"[concat(variables('factoryId'), '/linkedServices/adb_etl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_genome_orchestration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_extractdata_gene",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "EntityName",
								"value": "gene"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_mysql_src",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "gene"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parq_raw",
								"type": "DatasetReference",
								"parameters": {
									"year": "2020",
									"month": "08",
									"day": "28",
									"entityName": "gene"
								}
							}
						]
					},
					{
						"name": "cp_extractdata_biotype",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "EntityName",
								"value": "biotype"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_mysql_src",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "biotype"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parq_raw",
								"type": "DatasetReference",
								"parameters": {
									"year": "2020",
									"month": "08",
									"day": "28",
									"entityName": "biotype"
								}
							}
						]
					},
					{
						"name": "cp_extractdata_geneattrib",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "EntityName",
								"value": "geneattrib"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_mysql_src",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "geneattrib"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parq_raw",
								"type": "DatasetReference",
								"parameters": {
									"year": "2020",
									"month": "08",
									"day": "28",
									"entityName": "geneattrib"
								}
							}
						]
					},
					{
						"name": "adb_kitchen",
						"description": "store genome datasets into Hive tables ",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "cp_extractdata_gene",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "cp_extractdata_geneattrib",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "cp_extractdata_biotype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Genome/KitchenLayer"
						},
						"linkedServiceName": {
							"referenceName": "adb_etl",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adb_servinglayer",
						"description": "Transform data into Data Lake in a dimensional model for serving from Power BI",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "adb_kitchen",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Genome/KitchenLayer"
						},
						"linkedServiceName": {
							"referenceName": "adb_etl",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"annotations": [],
				"lastPublishTime": "2020-08-28T08:49:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_mysql_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_parq_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/adb_etl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_genome_orchestration_DQ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_extractdata_gene",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Validate Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "EntityName",
								"value": "gene"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_mysql_src",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "gene"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parq_raw",
								"type": "DatasetReference",
								"parameters": {
									"year": "2020",
									"month": "08",
									"day": "28",
									"entityName": "gene"
								}
							}
						]
					},
					{
						"name": "cp_extractdata_biotype",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Validate Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "EntityName",
								"value": "biotype"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_mysql_src",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "biotype"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parq_raw",
								"type": "DatasetReference",
								"parameters": {
									"year": "2020",
									"month": "08",
									"day": "28",
									"entityName": "biotype"
								}
							}
						]
					},
					{
						"name": "cp_extractdata_geneattrib",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Validate Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "EntityName",
								"value": "geneattrib"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_mysql_src",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "geneattrib"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parq_raw",
								"type": "DatasetReference",
								"parameters": {
									"year": "2020",
									"month": "08",
									"day": "28",
									"entityName": "geneattrib"
								}
							}
						]
					},
					{
						"name": "adb_stage",
						"description": "store genome datasets into Hive tables ",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "cp_extractdata_gene",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "cp_extractdata_biotype",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "cp_extractdata_geneattrib",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Genome/KitchenLayer"
						},
						"linkedServiceName": {
							"referenceName": "adb_etl",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adb_logerror",
						"description": "Transform data into Data Lake in a dimensional model for serving from Power BI",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Data Quality Checks",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Genome/KitchenLayer"
						},
						"linkedServiceName": {
							"referenceName": "adb_etl",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adb_servinglayer_load",
						"description": "Transform data into Data Lake in a dimensional model for serving from Power BI",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Data Quality Checks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Genome/KitchenLayer"
						},
						"linkedServiceName": {
							"referenceName": "adb_etl",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data Quality Checks",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('listofEntities')",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "adb_applyDW",
									"description": "Apply Data quality Rules for the entity",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Genome/KitchenLayer"
									},
									"linkedServiceName": {
										"referenceName": "adb_etl",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Validate Datasets",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_gene_src",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "7.00:00:00",
							"sleep": 10
						}
					},
					{
						"name": "Get Entities",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "adb_stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_gene_dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"concurrency": 1,
				"variables": {
					"listofEntities": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-13T11:02:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_mysql_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_parq_raw')]",
				"[concat(variables('factoryId'), '/linkedServices/adb_etl')]",
				"[concat(variables('factoryId'), '/datasets/ds_gene_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_gene_dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_loaddatatodb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_load_gene",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "gene_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "gene_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "biotype",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "biotype",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "analysis_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "analysis_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "seq_region_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "seq_region_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "seq_region_start",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "seq_region_start",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "seq_region_end",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "seq_region_end",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "seq_region_strand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "seq_region_strand",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "display_xref_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "display_xref_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "is_current",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_current",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "canonical_transcript_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "canonical_transcript_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "stable_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "stable_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "version",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_date",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "modified_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "modified_date",
											"type": "String",
											"physicalType": "text"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_gene_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_gene_dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "cp_load_geneattrib",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "gene_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "gene_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "attrib_type_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "attrib_type_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "value",
											"type": "String",
											"physicalType": "text"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_geneattrib_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_geneattrib_dest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-27T12:31:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_gene_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_gene_dest')]",
				"[concat(variables('factoryId'), '/datasets/ds_geneattrib_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_geneattrib_dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_initalLoad_orchestration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "PhoneNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PhoneNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_csv",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "customers.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dst_parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "customers.parquet"
								}
							}
						]
					},
					{
						"name": "copy orders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesOrderID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrderDate",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DueDate",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ShipDate",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SubTotal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubTotal",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxAmt",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Freight",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "TotalDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalDue",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_csv",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "orders.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dst_parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "orders.parquet"
								}
							}
						]
					},
					{
						"name": "copy territory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SalesYTD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesYTD",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SalesLastYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesLastYear",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CostYTD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CostYTD",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CostLastYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CostLastYear",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_csv",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "salesterritory.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dst_parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "salesterritory.parquet"
								}
							}
						]
					},
					{
						"name": "Set Error variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copy territory",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "loadError",
							"value": {
								"value": "@concat('{\"Entity\" :\"Sales.Territory\", \"ErrorMessage\": \"',activity('Copy territory').output.errors[0].Message,'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log Error",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set Error variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/hub/logError",
							"baseParameters": {
								"ErrorMessage": {
									"value": "@variables('loadError')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "adb_etl",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"loadErrorObject": {
						"type": "Array"
					},
					"loadError": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HUB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_csv')]",
				"[concat(variables('factoryId'), '/datasets/dst_parquet')]",
				"[concat(variables('factoryId'), '/linkedServices/adb_etl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_initialload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Entities",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load Entity",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_entity_load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EntityName": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"entities": {
						"type": "Array",
						"defaultValue": [
							"customers",
							"salesterritory",
							"orders"
						]
					}
				},
				"folder": {
					"name": "HUB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_entity_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Entities",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load Entity",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_entity_load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EntityName": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Data Quality Check",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Load Entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Data Quality Checks",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/hub/DQEngine",
										"baseParameters": {
											"Entity": {
												"value": "@item()",
												"type": "Expression"
											},
											"ProcessType": "batch"
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_etl",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Load To DW",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Data Quality Check",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Load Entity to Interim Storage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_deltalake",
											"type": "DatasetReference",
											"parameters": {
												"EntityName": {
													"value": "@if(equals(item(),'customers'),'curated.Customer',if(equals(item(),'salesterritory'),'curated.SalesTerritory','curated.Order'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_synapsetemp",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Load to DW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load Entity to Interim Storage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": "*.parquet",
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SqlDWSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_synapsetemp",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_synapse",
											"type": "DatasetReference",
											"parameters": {
												"EntityName": {
													"value": "@if(equals(item(),'customers'),'Sales.DimCustomer',if(equals(item(),'salesterritory'),'Sales.SalesTerritory','Sales.FactOrder'))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Temp File",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Load to DW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_synapsetemp",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"entities": {
						"type": "Array",
						"defaultValue": [
							"customers",
							"salesterritory",
							"orders"
						]
					}
				},
				"folder": {
					"name": "HUB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_entity_load')]",
				"[concat(variables('factoryId'), '/linkedServices/adb_etl')]",
				"[concat(variables('factoryId'), '/datasets/ds_deltalake')]",
				"[concat(variables('factoryId'), '/datasets/ds_synapsetemp')]",
				"[concat(variables('factoryId'), '/datasets/ds_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_load_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Entities",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load Entity",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_entity_load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EntityName": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Data Quality Check",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Load Entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Data Quality Checks",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/hub/DQEngine",
										"baseParameters": {
											"Entity": {
												"value": "@item()",
												"type": "Expression"
											},
											"ProcessType": "batch"
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_etl",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Load To DW",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Data Quality Check",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('entities')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Load Entity to DW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlDWSink"
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_storage",
												"type": "LinkedServiceReference"
											},
											"path": ""
										}
									},
									"inputs": [
										{
											"referenceName": "ds_deltalake",
											"type": "DatasetReference",
											"parameters": {
												"EntityName": {
													"value": "@if(equals(item(),'customers'),'curated.Customer',if(equals(item(),'salesterritory'),'curated.SalesTerritory','curated.Order'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_synapse",
											"type": "DatasetReference",
											"parameters": {
												"EntityName": {
													"value": "@if(equals(item(),'customers'),'Sales.DimCustomer',if(equals(item(),'salesterritory'),'Sales.SalesTerritory','Sales.FactOrder'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"variables": {
					"entities": {
						"type": "Array",
						"defaultValue": [
							"customers",
							"salesterritory",
							"orders"
						]
					}
				},
				"folder": {
					"name": "HUB"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_entity_load')]",
				"[concat(variables('factoryId'), '/linkedServices/adb_etl')]",
				"[concat(variables('factoryId'), '/datasets/ds_deltalake')]",
				"[concat(variables('factoryId'), '/datasets/ds_synapse')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stock_orchestration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validate Files are available",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_stock_src",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:20",
							"sleep": 10
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_stock_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_deltalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_deltalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EntityName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "HUB/Sources"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "curated",
					"table": "customer"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_deltalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_deltalake_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_dl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EntityName": {
						"type": "string",
						"defaultValue": "customer"
					}
				},
				"folder": {
					"name": "HUB/Targets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().EntityName",
							"type": "Expression"
						},
						"folderPath": "dwload",
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gene_dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlcon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "gene"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlcon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gene_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageblob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Data sources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "gene.csv",
						"container": "tau"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_geneattrib_dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlcon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "gene_id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "attrib_type_id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "value",
						"type": "text",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "geneattrib"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlcon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_geneattrib_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageblob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Data sources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "geneattrib.csv",
						"container": "tau"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_mysql_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mysqlcon",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string",
						"defaultValue": "gene"
					}
				},
				"folder": {
					"name": "Data sources"
				},
				"annotations": [
					"azure mysql genome database"
				],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mysqlcon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parq_gene_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_dl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gene",
						"folderPath": {
							"value": "raw/{year}/{month}/{day}/{hour}/",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parq_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_dl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year": {
						"type": "string",
						"defaultValue": "2020"
					},
					"month": {
						"type": "string",
						"defaultValue": "08"
					},
					"day": {
						"type": "string",
						"defaultValue": "28"
					},
					"entityName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Destinations"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gene",
						"folderPath": {
							"value": "@concat('raw/',dataset().entityName,'/',dataset().year,'/',dataset().month,'/',dataset().day)",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_stock_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_dl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Data sources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*.csv",
						"folderPath": "stock/*/2021/04/13",
						"fileSystem": "stage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Symbol",
						"type": "String"
					},
					{
						"name": "Series",
						"type": "String"
					},
					{
						"name": "Prev Close",
						"type": "String"
					},
					{
						"name": "Open",
						"type": "String"
					},
					{
						"name": "High",
						"type": "String"
					},
					{
						"name": "Low",
						"type": "String"
					},
					{
						"name": "Last",
						"type": "String"
					},
					{
						"name": "Close",
						"type": "String"
					},
					{
						"name": "VWAP",
						"type": "String"
					},
					{
						"name": "Volume",
						"type": "String"
					},
					{
						"name": "Turnover",
						"type": "String"
					},
					{
						"name": "Trades",
						"type": "String"
					},
					{
						"name": "Deliverable Volume",
						"type": "String"
					},
					{
						"name": "%Deliverble",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_synapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_synapsehub",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EntityName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "HUB/Targets"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "Sales",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_synapsehub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_dl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string",
						"defaultValue": "customers.parquet"
					}
				},
				"folder": {
					"name": "HUB/Targets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "sales",
						"fileSystem": "stage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_dl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string",
						"defaultValue": "customers.csv"
					}
				},
				"folder": {
					"name": "HUB/Sources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "sales",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceServiceCloud1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SalesforceServiceCloud",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforceServiceCloud1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('SalesforceServiceCloud1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud1_securityToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceServiceCloud2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SalesforceServiceCloud",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforceServiceCloud2_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('SalesforceServiceCloud2_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud2_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud2_securityToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adb_etl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4979278838401978.18.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "akv_global",
							"type": "LinkedServiceReference"
						},
						"secretName": "dbricks"
					},
					"existingClusterId": "0426-064339-opal611"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/akv_global')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_dl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_dl_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/akv_global')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('akv_global_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_af_datavalidation')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('ls_af_datavalidation_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('ls_af_datavalidation_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_deltalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-4979278838401978.18.azuredatabricks.net",
					"clusterId": "0426-064339-opal611",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "akv_global",
							"type": "LinkedServiceReference"
						},
						"secretName": "dbricks"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/akv_global')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_synapsehub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_synapsehub_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysqlcon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('mysqlcon_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "akv_global",
							"type": "LinkedServiceReference"
						},
						"secretName": "mysqladmin"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/akv_global')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqlDB_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "akv_global",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqladmin"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/akv_global')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storageblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "akv_global",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('storageblob_properties_typeProperties_sasUri_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/akv_global')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HourlySchedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-08-28T05:17:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_synapsetemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HUB"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "synapsetemp"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_storage')]"
			]
		}
	]
}